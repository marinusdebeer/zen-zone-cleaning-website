{"version":3,"file":"static/js/65.eff1e7cc.chunk.js","mappings":"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","sources":["components/Reviews.js"],"sourcesContent":["import React from 'react';\nimport './Reviews.css';\nimport './Faces.css';\nimport './Mascots.css';\nimport { REVIEWS as RAW_REVIEWS, getReviewsSummary } from './reviewsData';\n\n// Sort by date desc; parse using Date for robust ordering\nconst REVIEWS = [...RAW_REVIEWS].sort((a, b) => new Date(b.date) - new Date(a.date));\nconst SUMMARY = getReviewsSummary();\n\nfunction Star({ filled }) {\n  return (\n    <svg\n      className={`review__star ${filled ? 'review__star--filled' : ''}`}\n      width=\"20\"\n      height=\"20\"\n      viewBox=\"0 0 24 24\"\n      aria-hidden=\"true\"\n    >\n      <path d=\"M12 .587l3.668 7.431 8.2 1.192-5.934 5.786 1.401 8.164L12 18.896l-7.335 3.864 1.401-8.164L.132 9.21l8.2-1.192L12 .587z\" />\n    </svg>\n  );\n}\n\nfunction Avatar({ name }) {\n  const trimmed = (name || '?').trim();\n  const parts = trimmed.split(/\\s+/);\n  const first = parts[0]?.charAt(0) || '?';\n  const last = parts.length > 1 ? parts[parts.length - 1].charAt(0) : '';\n  const initials = `${first}${last}`.toUpperCase();\n  return (\n    <div className=\"review__avatar\" aria-hidden=\"true\">\n      {initials}\n    </div>\n  );\n}\n\nfunction ReviewCard({ review }) {\n  const rawText = (review.text || '').trim();\n  const showText = rawText && !/^\\[no written review provided\\]/i.test(rawText);\n  return (\n    <article className=\"review-card\">\n      <header className=\"review-card__header\">\n        <Avatar name={review.name} />\n        <div className=\"review-card__meta\">\n          <strong className=\"review-card__name\">\n            {review.name}{' '}\n            {review.isLocalGuide && (\n              <span className=\"review-card__badge\" title=\"Local Guide\">\n                Local Guide\n              </span>\n            )}\n          </strong>\n          <div className=\"review-card__rating\" aria-label={`${review.rating} out of 5 stars`}>\n            {Array.from({ length: 5 }).map((_, i) => (\n              <Star key={i} filled={i < review.rating} />\n            ))}\n          </div>\n          <span className=\"review-card__date\">{review.date}</span>\n        </div>\n      </header>\n      {showText && <blockquote className=\"review-card__text\">“{review.text}”</blockquote>}\n    </article>\n  );\n}\n\nexport default function Reviews() {\n  const totals = React.useMemo(() => {\n    const count = REVIEWS.length;\n    const sum = REVIEWS.reduce((acc, r) => acc + (Number(r.rating) || 0), 0);\n    const avg = count ? sum / count : 0;\n    return { count, average: avg };\n  }, []);\n  return (\n    <section className=\"reviews\" id=\"reviews\" aria-label=\"Client Reviews\">\n      <div className=\"reviews__header\">\n        <h2 className=\"reviews__title\">Reviews</h2>\n        <div className=\"reviews__actions\">\n          <a\n            href=\"https://maps.app.goo.gl/EyMWdSuMsExvrxaG7\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            className=\"google-button\"\n          >\n            <span className=\"google-word\" aria-hidden=\"true\">\n              <span className=\"g g--blue\">G</span>\n              <span className=\"g g--red\">o</span>\n              <span className=\"g g--yellow\">o</span>\n              <span className=\"g g--blue\">g</span>\n              <span className=\"g g--green\">l</span>\n              <span className=\"g g--red\">e</span>\n            </span>\n            <span>Reviews</span>\n            <span\n              className=\"reviews__summary\"\n              aria-label={`Average ${SUMMARY.average.toFixed(1)} from ${SUMMARY.count} reviews`}\n            >\n              <strong>{SUMMARY.average.toFixed(1)}</strong> ({SUMMARY.count})\n            </span>\n          </a>\n        </div>\n        {/* Removed small overlapping faces for a cleaner header */}\n      </div>\n\n    {/* Scattered decorative faces */}\n    <img src={`${process.env.PUBLIC_URL}/images/8.avif`} alt=\"\" className=\"face face--xl face--heart face--sticker reviews__face reviews__face--br face--tilt-r2\" aria-hidden=\"true\" />\n      <div className=\"reviews__scroller\" aria-label=\"Reviews list\">\n        {REVIEWS.map((r) => (\n          <ReviewCard key={r.name} review={r} />\n        ))}\n      </div>\n    </section>\n  );\n}\n"],"names":["REVIEWS","RAW_REVIEWS","sort","a","b","Date","date","SUMMARY","getReviewsSummary","Star","_ref","filled","_jsx","className","concat","width","height","viewBox","children","d","Avatar","_ref2","_parts$","name","parts","trim","split","first","charAt","last","length","initials","toUpperCase","ReviewCard","_ref3","review","rawText","text","showText","test","_jsxs","isLocalGuide","title","rating","Array","from","map","_","i","Reviews","React","count","sum","reduce","acc","r","Number","average","id","href","target","rel","toFixed","src","process","alt"],"sourceRoot":""}